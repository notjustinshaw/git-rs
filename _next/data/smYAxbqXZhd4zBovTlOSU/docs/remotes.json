{"pageProps":{"markdoc":{"content":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To be able to collaborate on any Git project, you need to know how to manage your remote repositories."," ","Remote repositories are versions of your project that are hosted on the Internet or network somewhere."," ","You can have several of them, each of which generally is either read-only or read/write for you."," ","Collaborating with others involves managing these remote repositories and pushing and pulling data to and from them when you need to share work."," ","Managing remote repositories includes knowing how to add remote repositories, remove remotes that are no longer valid, manage various remote branches and define them as being tracked or not, and more."," ","In this section, we'll cover some of these remote-management skills."]},{"$$mdtype":"Tag","name":"Callout","attributes":{"title":"Remote repositories can be on your local machine.","type":"note"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["It is entirely possible that you can be working with a \"",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["remote"]},"\" repository that is, in fact, on the same host you are."," ","The word \"",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["remote"]},"\" does not necessarily imply that the repository is somewhere else on the network or Internet, only that it is elsewhere."," ","Working with such a remote repository would still involve all the standard pushing, pulling and fetching operations as with any other remote."]}]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"showing-your-remotes"},"children":["Showing Your Remotes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To see which remote servers you have configured, you can run the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git remote"]}," command.(((git commands, remote)))"," ","It lists the shortnames of each remote handle you've specified."," ","If you've cloned your repository, you should at least see ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["origin"]}," -- that is the default name Git gives to the server you cloned from:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git clone https://github.com/schacon/ticgit\nCloning into 'ticgit'...\nremote: Reusing existing pack: 1857, done.\nremote: Total 1857 (delta 0), reused 0 (delta 0)\nReceiving objects: 100% (1857/1857), 374.35 KiB | 268.00 KiB/s, done.\nResolving deltas: 100% (772/772), done.\nChecking connectivity... done.\n$ cd ticgit\n$ git remote\norigin\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can also specify ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["-v"]},", which shows you the URLs that Git has stored for the shortname to be used when reading and writing to that remote:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git remote -v\norigin\thttps://github.com/schacon/ticgit (fetch)\norigin\thttps://github.com/schacon/ticgit (push)\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you have more than one remote, the command lists them all."," ","For example, a repository with multiple remotes for working with several collaborators might look something like this."]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ cd grit\n$ git remote -v\nbakkdoor  https://github.com/bakkdoor/grit (fetch)\nbakkdoor  https://github.com/bakkdoor/grit (push)\ncho45     https://github.com/cho45/grit (fetch)\ncho45     https://github.com/cho45/grit (push)\ndefunkt   https://github.com/defunkt/grit (fetch)\ndefunkt   https://github.com/defunkt/grit (push)\nkoke      git://github.com/koke/grit.git (fetch)\nkoke      git://github.com/koke/grit.git (push)\norigin    git@github.com:mojombo/grit.git (fetch)\norigin    git@github.com:mojombo/grit.git (push)\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This means we can pull contributions from any of these users pretty easily."," ","We may additionally have permission to push to one or more of these, though we can't tell that here."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Notice that these remotes use a variety of protocols; we'll cover more about this in <<ch04-git-on-the-server#_getting_git_on_a_server>>."]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"adding-remote-repositories"},"children":["Adding Remote Repositories"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["We've mentioned and given some demonstrations of how the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git clone"]}," command implicitly adds the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["origin"]}," remote for you."," ","Here's how to add a new remote explicitly."," ","To add a new remote Git repository as a shortname you can reference easily, run ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git remote add <shortname> <url>"]},":"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git remote\norigin\n$ git remote add pb https://github.com/paulboone/ticgit\n$ git remote -v\norigin\thttps://github.com/schacon/ticgit (fetch)\norigin\thttps://github.com/schacon/ticgit (push)\npb\thttps://github.com/paulboone/ticgit (fetch)\npb\thttps://github.com/paulboone/ticgit (push)\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Now you can use the string ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["pb"]}," on the command line in lieu of the whole URL."," ","For example, if you want to fetch all the information that Paul has but that you don't yet have in your repository, you can run ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git fetch pb"]},":"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git fetch pb\nremote: Counting objects: 43, done.\nremote: Compressing objects: 100% (36/36), done.\nremote: Total 43 (delta 10), reused 31 (delta 5)\nUnpacking objects: 100% (43/43), done.\nFrom https://github.com/paulboone/ticgit\n * [new branch]      master     -> pb/master\n * [new branch]      ticgit     -> pb/ticgit\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Paul's ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["master"]}," branch is now accessible locally as ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["pb/master"]}," -- you can merge it into one of your branches, or you can check out a local branch at that point if you want to inspect it."," ","We'll go over what branches are and how to use them in much more detail in <<ch03-git-branching#ch03-git-branching>>."]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"fetching-and-pulling-from-your-remotes"},"children":["Fetching and Pulling from Your Remotes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["As you just saw, to get data from your remote projects, you can run:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git fetch <remote>\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["The command goes out to that remote project and pulls down all the data from that remote project that you don't have yet."," ","After you do this, you should have references to all the branches from that remote, which you can merge in or inspect at any time."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you clone a repository, the command automatically adds that remote repository under the name \"",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["origin"]},"\"."," ","So, ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git fetch origin"]}," fetches any new work that has been pushed to that server since you cloned (or last fetched from) it."," ","It's important to note that the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git fetch"]}," command only downloads the data to your local repository -- it doesn't automatically merge it with any of your work or modify what you're currently working on."," ","You have to merge it manually into your work when you're ready."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If your current branch is set up to track a remote branch (see the next section and <<ch03-git-branching#ch03-git-branching>> for more information), you can use the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git pull"]}," command to automatically fetch and then merge that remote branch into your current branch."," ","This may be an easier or more comfortable workflow for you; and by default, the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git clone"]}," command automatically sets up your local ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["master"]}," branch to track the remote ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["master"]}," branch (or whatever the default branch is called) on the server you cloned from."," ","Running ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git pull"]}," generally fetches data from the server you originally cloned from and automatically tries to merge it into the code you're currently working on."]},{"$$mdtype":"Tag","name":"Callout","attributes":{"title":"Pulling Strategies","type":"note"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["From git version 2.27 onward, ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git pull"]}," will give a warning if the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["pull.rebase"]}," variable is not set."," ","Git will keep warning you until you set the variable."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Use ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git config --global pull.rebase \"false\""]}," if you want the default behavior of git (fast-forward if possible, else create a merge commit)."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Use ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git config --global pull.rebase \"true\""]}," if you want to rebase when pulling."]}]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"pushing-to-your-remotes"},"children":["Pushing to Your Remotes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["When you have your project at a point that you want to share, you have to push it upstream."," ","The command for this is simple: ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git push <remote> <branch>"]},"."," ","If you want to push your ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["master"]}," branch to your ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["origin"]}," server (again, cloning generally sets up both of those names for you automatically), then you can run this to push any commits you've done back up to the server:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git push origin master\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This command works only if you cloned from a server to which you have write access and if nobody has pushed in the meantime."," ","If you and someone else clone at the same time and they push upstream and then you push upstream, your push will rightly be rejected."," ","You'll have to fetch their work first and incorporate it into yours before you'll be allowed to push."," ","See <<ch03-git-branching#ch03-git-branching>> for more detailed information on how to push to remote servers."]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"inspecting-a-remote"},"children":["Inspecting a Remote"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you want to see more information about a particular remote, you can use the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git remote show <remote>"]}," command."," ","If you run this command with a particular shortname, such as ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["origin"]},", you get something like this:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git remote show origin\n* remote origin\n  Fetch URL: https://github.com/schacon/ticgit\n  Push  URL: https://github.com/schacon/ticgit\n  HEAD branch: master\n  Remote branches:\n    master                               tracked\n    dev-branch                           tracked\n  Local branch configured for 'git pull':\n    master merges with remote master\n  Local ref configured for 'git push':\n    master pushes to master (up to date)\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["It lists the URL for the remote repository as well as the tracking branch information."," ","The command helpfully tells you that if you're on the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["master"]}," branch and you run ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git pull"]},", it will automatically merge the remote's ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["master"]}," branch into the local one after it has been fetched."," ","It also lists all the remote references it has pulled down."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["That is a simple example you're likely to encounter."," ","When you're using Git more heavily, however, you may see much more information from ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git remote show"]},":"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git remote show origin\n* remote origin\n  URL: https://github.com/my-org/complex-project\n  Fetch URL: https://github.com/my-org/complex-project\n  Push  URL: https://github.com/my-org/complex-project\n  HEAD branch: master\n  Remote branches:\n    master                           tracked\n    dev-branch                       tracked\n    markdown-strip                   tracked\n    issue-43                         new (next fetch will store in remotes/origin)\n    issue-45                         new (next fetch will store in remotes/origin)\n    refs/remotes/origin/issue-11     stale (use 'git remote prune' to remove)\n  Local branches configured for 'git pull':\n    dev-branch merges with remote dev-branch\n    master     merges with remote master\n  Local refs configured for 'git push':\n    dev-branch                     pushes to dev-branch                     (up to date)\n    markdown-strip                 pushes to markdown-strip                 (up to date)\n    master                         pushes to master                         (up to date)\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This command shows which branch is automatically pushed to when you run ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git push"]}," while on certain branches."," ","It also shows you which remote branches on the server you don't yet have, which remote branches you have that have been removed from the server, and multiple local branches that are able to merge automatically with their remote-tracking branch when you run ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git pull"]},"."]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"renaming-and-removing-remotes"},"children":["Renaming and Removing Remotes"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can run ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git remote rename"]}," to change a remote's shortname.(((git commands, remote)))"," ","For instance, if you want to rename ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["pb"]}," to ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["paul"]},", you can do so with ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git remote rename"]},":"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git remote rename pb paul\n$ git remote\norigin\npaul\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["It's worth mentioning that this changes all your remote-tracking branch names, too."," ","What used to be referenced at ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["pb/master"]}," is now at ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["paul/master"]},"."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you want to remove a remote for some reason -- you've moved the server or are no longer using a particular mirror, or perhaps a contributor isn't contributing anymore -- you can either use ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git remote remove"]}," or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git remote rm"]},":"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git remote remove paul\n$ git remote\norigin\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Once you delete the reference to a remote this way, all remote-tracking branches and configuration settings associated with that remote are also deleted."]}],"frontmatter":{"title":"Working with Remotes","description":null},"file":{"path":"/docs/remotes.md"}}},"__N_SSG":true}