{"pageProps":{"markdoc":{"content":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Like most VCSs, Git has the ability to tag specific points in a repository's history as being important."," ","Typically, people use this functionality to mark release points (",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["v1.0"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["v2.0"]}," and so on)."," ","In this section, you'll learn how to list existing tags, how to create and delete tags, and what the different types of tags are."]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"listing-your-tags"},"children":["Listing Your Tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Listing the existing tags in Git is straightforward."," ","Just type ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git tag"]}," (with optional ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["-l"]}," or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["--list"]},"):"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git tag\nv1.0\nv2.0\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This command lists the tags in alphabetical order; the order in which they are displayed has no real importance."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can also search for tags that match a particular pattern."," ","The Git source repo, for instance, contains more than 500 tags."," ","If you're interested only in looking at the 1.8.5 series, you can run this:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git tag -l \"v1.8.5*\"\nv1.8.5\nv1.8.5-rc0\nv1.8.5-rc1\nv1.8.5-rc2\nv1.8.5-rc3\nv1.8.5.1\nv1.8.5.2\nv1.8.5.3\nv1.8.5.4\nv1.8.5.5\n"]},{"$$mdtype":"Tag","name":"Callout","attributes":{"title":"Listing tag wildcards requires `-l` or `--list` option","type":"note"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you want just the entire list of tags, running the command ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git tag"]}," implicitly assumes you want a listing and provides one; the use of ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["-l"]}," or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["--list"]}," in this case is optional."," ","If, however, you're supplying a wildcard pattern to match tag names, the use of ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["-l"]}," or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["--list"]}," is mandatory."]}]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"creating-tags"},"children":["Creating Tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Git supports two types of tags: ",{"$$mdtype":"Tag","name":"em","attributes":{},"children":["lightweight"]}," and ",{"$$mdtype":"Tag","name":"em","attributes":{},"children":["annotated"]},"."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["A lightweight tag is very much like a branch that doesn't change -- it's just a pointer to a specific commit."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Annotated tags, however, are stored as full objects in the Git database."," ","They're checksummed; contain the tagger name, email, and date; have a tagging message; and can be signed and verified with GNU Privacy Guard (GPG)."," ","It's generally recommended that you create annotated tags so you can have all this information; but if you want a temporary tag or for some reason don't want to keep the other information, lightweight tags are available too."]},{"$$mdtype":"Tag","name":"h3","attributes":{"id":"annotated-tags"},"children":["Annotated Tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Creating an annotated tag in Git is simple."," ","The easiest way is to specify ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["-a"]}," when you run the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["tag"]}," command:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git tag -a v1.4 -m \"my version 1.4\"\n$ git tag\nv0.1\nv1.3\nv1.4\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["The ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["-m"]}," specifies a tagging message, which is stored with the tag."," ","If you don't specify a message for an annotated tag, Git launches your editor so you can type it in."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can see the tag data along with the commit that was tagged by using the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git show"]}," command:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git show v1.4\ntag v1.4\nTagger: Ben Straub <ben@straub.cc>\nDate:   Sat May 3 20:19:12 2014 -0700\n\nmy version 1.4\n\ncommit ca82a6dff817ec66f44342007202690a93763949\nAuthor: Scott Chacon <schacon@gee-mail.com>\nDate:   Mon Mar 17 21:52:11 2008 -0700\n\n    Change version number\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["That shows the tagger information, the date the commit was tagged, and the annotation message before showing the commit information."]},{"$$mdtype":"Tag","name":"h3","attributes":{"id":"lightweight-tags"},"children":["Lightweight Tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Another way to tag commits is with a lightweight tag."," ","This is basically the commit checksum stored in a file -- no other information is kept."," ","To create a lightweight tag, don't supply any of the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["-a"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["-s"]},", or ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["-m"]}," options, just provide a tag name:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git tag v1.4-lw\n$ git tag\nv0.1\nv1.3\nv1.4\nv1.4-lw\nv1.5\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["This time, if you run ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git show"]}," on the tag, you don't see the extra tag information."," ","The command just shows the commit:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git show v1.4-lw\ncommit ca82a6dff817ec66f44342007202690a93763949\nAuthor: Scott Chacon <schacon@gee-mail.com>\nDate:   Mon Mar 17 21:52:11 2008 -0700\n\n    Change version number\n"]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"tagging-later"},"children":["Tagging Later"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can also tag commits after you've moved past them."," ","Suppose your commit history looks like this:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git log --pretty=oneline\n15027957951b64cf874c3557a0f3547bd83b3ff6 Merge branch 'experiment'\na6b4c97498bd301d84096da251c98a07c7723e65 Create write support\n0d52aaab4479697da7686c15f77a3d64d9165190 One more thing\n6d52a271eda8725415634dd79daabbc4d9b6008e Merge branch 'experiment'\n0b7434d86859cc7b8c3d5e1dddfed66ff742fcbc Add commit function\n4682c3261057305bdd616e23b64b0857d832627b Add todo file\n166ae0c4d3f420721acbb115cc33848dfcc2121a Create write support\n9fceb02d0ae598e95dc970b74767f19372d61af8 Update rakefile\n964f16d36dfccde844893cac5b347e7b3d44abbc Commit the todo\n8a5cbc430f1a9c3d00faaeffd07798508422908a Update readme\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Now, suppose you forgot to tag the project at v1.2, which was at the \"",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["Update rakefile"]},"\" commit."," ","You can add it after the fact."," ","To tag that commit, you specify the commit checksum (or part of it) at the end of the command:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git tag -a v1.2 9fceb02\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["You can see that you've tagged the commit:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git tag\nv0.1\nv1.2\nv1.3\nv1.4\nv1.4-lw\nv1.5\n\n$ git show v1.2\ntag v1.2\nTagger: Scott Chacon <schacon@gee-mail.com>\nDate:   Mon Feb 9 15:32:16 2009 -0800\n\nversion 1.2\ncommit 9fceb02d0ae598e95dc970b74767f19372d61af8\nAuthor: Magnus Chacon <mchacon@gee-mail.com>\nDate:   Sun Apr 27 20:43:35 2008 -0700\n\n    Update rakefile\n...\n"]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"sharing-tags"},"children":["Sharing Tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["By default, the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git push"]}," command doesn't transfer tags to remote servers."," ","You will have to explicitly push tags to a shared server after you have created them."," ","This process is just like sharing remote branches -- you can run ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git push origin <tagname>"]},"."]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git push origin v1.5\nCounting objects: 14, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (12/12), done.\nWriting objects: 100% (14/14), 2.05 KiB | 0 bytes/s, done.\nTotal 14 (delta 3), reused 0 (delta 0)\nTo git@github.com:schacon/simplegit.git\n * [new tag]         v1.5 -> v1.5\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you have a lot of tags that you want to push up at once, you can also use the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["--tags"]}," option to the ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git push"]}," command."," ","This will transfer all of your tags to the remote server that are not already there."]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git push origin --tags\nCounting objects: 1, done.\nWriting objects: 100% (1/1), 160 bytes | 0 bytes/s, done.\nTotal 1 (delta 0), reused 0 (delta 0)\nTo git@github.com:schacon/simplegit.git\n * [new tag]         v1.4 -> v1.4\n * [new tag]         v1.4-lw -> v1.4-lw\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Now, when someone else clones or pulls from your repository, they will get all your tags as well."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["[NOTE]"," ",".",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git push"]}," pushes both types of tags"," ","===="," ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git push <remote> --tags"]}," will push both lightweight and annotated tags."," ","There is currently no option to push only lightweight tags, but if you use ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git push <remote> --follow-tags"]}," only annotated tags will be pushed to the remote."," ","===="]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"deleting-tags"},"children":["Deleting Tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["To delete a tag on your local repository, you can use ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git tag -d <tagname>"]},"."," ","For example, we could remove our lightweight tag above as follows:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git tag -d v1.4-lw\nDeleted tag 'v1.4-lw' (was e7d5add)\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Note that this does not remove the tag from any remote servers."," ","There are two common variations for deleting a tag from a remote server."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["The first variation is ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git push <remote> :refs/tags/<tagname>"]},":"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git push origin :refs/tags/v1.4-lw\nTo /git@github.com:schacon/simplegit.git\n - [deleted]         v1.4-lw\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["The way to interpret the above is to read it as the null value before the colon is being pushed to the remote tag name, effectively deleting it."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["The second (and more intuitive) way to delete a remote tag is with:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git push origin --delete <tagname>\n"]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"checking-out-tags"},"children":["Checking out Tags"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you want to view the versions of files a tag is pointing to, you can do a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["git checkout"]}," of that tag, although this puts your repository in \"",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["detached HEAD"]},"\" state, which has some ill side effects:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git checkout v2.0.0\nNote: switching to 'v2.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 99ada87... Merge pull request #89 from schacon/appendix-final\n\n$ git checkout v2.0-beta-0.1\nPrevious HEAD position was 99ada87... Merge pull request #89 from schacon/appendix-final\nHEAD is now at df3f601... Add atlas.json and cover image\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["In \"",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["detached HEAD"]},"\" state, if you make changes and then create a commit, the tag will stay the same, but your new commit won't belong to any branch and will be unreachable, except by the exact commit hash."," ","Thus, if you need to make changes -- say you're fixing a bug on an older version, for instance -- you will generally want to create a branch:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{},"children":["$ git checkout -b version2 v2.0.0\nSwitched to a new branch 'version2'\n"]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["If you do this and make a commit, your ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["version2"]}," branch will be slightly different than your ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["v2.0.0"]}," tag since it will move forward with your new changes, so do be careful."]}],"frontmatter":{"title":"Tagging","description":"Learn how to list existing tags, how to create and delete tags, and what the different types of tags are."},"file":{"path":"/docs/tagging.md"}}},"__N_SSG":true}